Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time.

SOLUTION:

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int product = 1;
        int n = nums.length;
        int zeroCount = 0;
        for(int i=0;i<n;i++){
            if(nums[i] !=0)
            product = product * nums[i];
            else
                zeroCount++;
        }
        int[] result = new int[n];
        for(int i=0;i<n;i++){
            if(nums[i] != 0){
                if(zeroCount >0)
                    result[i]=0;
                else
                    result[i]= product/nums[i];
            }
            
            else{
                if(zeroCount >1)
                    result[i] =0;
                else
                    result[i] = product;
            }
        }
       return result;
    }
}
