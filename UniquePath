class Solution {
    public int uniquePaths(int m, int n) {
       return dpUniquePaths(m,n);
    }
    
    public int dpUniquePaths(int m, int n){
        int[][] t = new int[m][n];
        for(int i=0, j=0;i<m;i++){
            t[i][j]=1;
        }
        for(int i=0, j=0;j<n;j++){
            t[i][j]=1;
        }
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                t[i][j] = t[i-1][j] + t[i][j-1];
            }
        }
        return t[m-1][n-1];
    }
    
    public int recursionUniquePaths(int m, int n){
        if(m == 1 || n==1)
            return 1;
        return recursionUniquePaths(m-1, n) + recursionUniquePaths(m, n-1);
    }
    
}
