Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i is at (i, ai) and (i, 0). 
Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.

SOLUTION:


class Solution {
    public int maxArea(int[] height) {
        return maxAreaUtil(height);
    }
    
    
    public int maxAreaUtil(int[] height){
        int n = height.length;
        int max = Integer.MIN_VALUE;
        int i=0;
        int j=n-1;
        while(i<j){
            max = Math.max(max, Math.min(height[i], height[j]) * (j-i));
            if(height[i] > height[j])
                j--;
            else
                i++;
        }
        return max;
    }
    
    public int maxAreaBruteForce(int[] height){
        int max = Integer.MIN_VALUE;
        int n = height.length;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                int water = Math.min(height[i], height[j]) * (j-i);
                max = Math.max(max, water);
            }
        }
        return max;
    }
}



