Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining

SOLUTION:

class Solution {
    public int trap(int[] height) {
        return trapUtil(height, height.length);
    }
    public int trapUtil(int[] height, int n){
        if(n==0)
            return 0;
        int[] left = new int[n];
        left[0]=-1;
        for(int i=1;i<n;i++){
            if(Math.max(left[i-1], height[i-1]) > height[i])
                left[i] = Math.max(left[i-1], height[i-1]);
            else
                left[i] = -1;
                            
        }
        
        int[] right = new int[n];
        right[n-1] = -1;
        for(int i=n-2;i>=0;i--){
            if(Math.max(right[i+1], height[i+1]) > height[i])
                right[i] = Math.max(right[i+1], height[i+1]);
            else
                right[i] = -1;
        }
        
        int result =0;
        
        for(int i=0;i<n;i++){
            int eachTower = Math.min(left[i], right[i]) - height[i];
            if(eachTower>0)
                result +=eachTower;
        }
        return result;
    }
}
