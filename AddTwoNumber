You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

SOLUTION:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null)
            return l2;
        if(l2 == null)
            return l1;
        int carry = 0;
        int sum =0;
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        ListNode result = new ListNode();
        ListNode temp = result;
        while(temp1.next != null && temp2.next != null){
             sum = (temp1.val+temp2.val + carry)%10;
            carry = (temp1.val+temp2.val + carry) / 10;
            temp.next = new ListNode(sum);
            temp = temp.next;
            temp1 = temp1.next;
            temp2 = temp2.next;
        }
        
        if(temp1.next == null){
            sum = (temp1.val+temp2.val + carry)%10;
            carry = (temp1.val+temp2.val + carry) / 10;
            temp.next = new ListNode(sum);
            temp = temp.next;
            temp1 = temp1.next;
            temp2 = temp2.next;
            while(temp2 != null){
                sum = (temp2.val + carry)%10;
                carry = (temp2.val + carry) / 10;
                temp.next = new ListNode(sum);
                temp = temp.next;
                temp2 = temp2.next;
            }
        }
        else{
            sum = (temp1.val+temp2.val + carry)%10;
            carry = (temp1.val+temp2.val + carry) / 10;
            temp.next = new ListNode(sum);
            temp = temp.next;
            temp1 = temp1.next;
            temp2 = temp2.next;
            while(temp1 != null){
                sum = (temp1.val + carry)%10;
                carry = (temp1.val + carry) / 10;
                temp.next = new ListNode(sum);
                temp = temp.next;
                temp1 = temp1.next;
            }
        }
        
        if(carry == 1)
            temp.next = new ListNode(1);
        return result.next;
        
    }
}
